import { Operation } from "pastapi-core";
import { operationNamespaces } from "./namespace";
import { router } from "./router";
import { handlerType } from "./handers";
import { boilerplate } from "./boilerplate";
import { format } from "@prettier/sync";
import { Options } from "prettier";

export const generate = (ops: Operation[], prettierConfig?: Options | undefined): string => {
  const code = `${buildHeader()}
import { Request, Response, Router } from "express";
import { z } from "zod";
${operationNamespaces(ops)}
${handlerType(ops)}
${router(ops)}
${boilerplate()}
`;
  return format(code, { parser: "typescript", ...prettierConfig });
};

const buildHeader = () => `
/*  ╔══════════════════════════════╗
/   ║ 🍝  Generated by Pastapi  🍝 ║
/   ║        Do not modify.        ║
/   ╚══════════════════════════════╝
/   
/   External Middleware Dependencies:
/   - body-parser to validate bodies
/   - cookie-parser to validate cookies
*/`;
